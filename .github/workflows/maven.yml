# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Electron Service Module CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 手动触发选项

# 定义所需的权限
permissions:
  contents: read
  packages: read
  # 如果将来需要启用依赖图提交，需要添加以下权限
  # security-events: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # 添加MySQL服务，用于集成测试
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 200309
          MYSQL_DATABASE: electron
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    # 初始化数据库schema
    - name: Initialize Database
      run: |
        sleep 20
        mysql --host=127.0.0.1 --port=3306 -uroot -p200309 -e "CREATE DATABASE IF NOT EXISTS electron;"
        mysql --host=127.0.0.1 --port=3306 -uroot -p200309 electron -e "
        CREATE TABLE IF NOT EXISTS admin_users (
          user_id INT AUTO_INCREMENT PRIMARY KEY,
          account VARCHAR(50) NOT NULL,
          password VARCHAR(100) NOT NULL,
          email VARCHAR(100),
          nick_name VARCHAR(50)
        );"
    
    # 先安装父项目POM
    - name: Install Parent POM
      run: mvn -B -N install
    
    # 构建全部项目，但使用简单方式，确保依赖正确解析
    - name: Build with Maven
      run: mvn -B clean install -DskipTests
    
    # 生成测试报告，即使测试失败也继续执行
    - name: Generate Test Report
      if: always()
      run: mvn surefire-report:report-only -DskipTests
    
    # 上传构建产物 - 保留修复版本
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4.3.1
      with:
        name: application-jar
        path: entrance/target/entrance-*.jar
        if-no-files-found: warn  # 如果没有找到文件则警告而不是失败
    
    # 上传测试报告
    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4.3.1
      with:
        name: test-reports
        path: |
          **/target/site/surefire-report.html
          **/target/surefire-reports/
        if-no-files-found: warn
    
    # 工作流构建状态通知（可选）
    - name: Build Status
      if: always()
      run: echo "Build completed with status ${{ job.status }} at $(date)"
